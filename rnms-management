rnmsBuildAndStart () {
    ver=$1
    docker build -t rnms:${ver} .
#   mount="$(pwd)/$(hostname -s)_rnms_mount"
#   if [ ! -d $mount ]; then mkdir -p $mount; fi
    mkdir /var/opt/RNMS_volume 8080:80/tcp -p 2055:2055/udp --mount type=bind,source=$mount,target=/RNMS rnms:${ver}
    docker run -dit --name rnms --hostname RNMS-kontejner -e TZ="Europe/Zagreb" --network host --mount type=bind,source=/var/opt/RNMS_volume,target=/RNMS rnms${ver}
    docker ps
    docker logs rnms
}

rnmsDestroy () {
    docker stop rnms && docker rm rnms && docker rmi rnms:$(docker image ls | grep rnms | head -1 | awk '{print $2}')
}

rnms () {
    if [ -z $1 ]; then
        docker exec -it rnms /bin/bash
    else
        docker exec -i rnms $@
    fi
}

rnmsHomeRecreateAndDiscover () {
    docker stop rnms; rm -rf /var/opt/RNMS_volume/*;  rnmsDestroy && rnmsBuildAndStart $1 && sleep 120 && rnms networkDiscovery.sh 10.13.37.2/32,rensenti && rnms checkStatus.sh && rnms checkPerf.sh RNMS 5
}

rnmsOfficeRecreateAndDiscover () {
    rm -rf /var/opt/RNMS_volume/* && rnmsDestroy && rnmsBuildAndStart $1 && sleep 120 && rnms networkDiscovery.sh 10.16.97.159/32,sntsnmpwifi1 10.88.88.21,public 10.88.88.22,public 10.88.88.23,public 10.88.88.24,public 10.88.88.10,public 10.88.88.11,public 10.88.88.12,public  && rnms checkStatus.sh && rnms checkPerf.sh RNMS 5
}
